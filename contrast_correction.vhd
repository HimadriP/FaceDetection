-- File: contrast_correction.vhd
-- Generated by MyHDL 0.9.0
-- Date: Wed Mar 29 17:09:00 2017


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_090.all;

entity contrast_correction is
    port (
        i_r: in unsigned(7 downto 0);
        i_g: in unsigned(7 downto 0);
        i_b: in unsigned(7 downto 0);
        i_clk: in unsigned(7 downto 0);
        o_r: out unsigned(7 downto 0);
        o_g: out unsigned(7 downto 0);
        o_b: out unsigned(7 downto 0)
    );
end entity contrast_correction;


architecture MyHDL of contrast_correction is





signal blu: unsigned(7 downto 0);
signal gre: unsigned(7 downto 0);
signal red: unsigned(7 downto 0);

function MYHDL11_contrast_correct(
    p: in unsigned
    ) return natural is
begin
    if (p < 26) then
        return 0;
    end if;
    if (p > 226) then
        return 255;
    end if;
    return to_integer(signed(p + shift_right(p, 2)) - 32);
end function MYHDL11_contrast_correct;

function MYHDL12_contrast_correct(
    p: in unsigned
    ) return natural is
begin
    if (p < 26) then
        return 0;
    end if;
    if (p > 226) then
        return 255;
    end if;
    return to_integer(signed(p + shift_right(p, 2)) - 32);
end function MYHDL12_contrast_correct;

function MYHDL13_contrast_correct(
    p: in unsigned
    ) return natural is
begin
    if (p < 26) then
        return 0;
    end if;
    if (p > 226) then
        return 255;
    end if;
    return to_integer(signed(p + shift_right(p, 2)) - 32);
end function MYHDL13_contrast_correct;

begin





CONTRAST_CORRECTION_RUN: process (i_g, i_r, i_b) is
begin
    2 * 1 ns
    red <= to_unsigned(MYHDL11_contrast_correct(i_r), 8);
    gre <= to_unsigned(MYHDL12_contrast_correct(i_g), 8);
    blu <= to_unsigned(MYHDL13_contrast_correct(i_b), 8);
end process CONTRAST_CORRECTION_RUN;



o_r <= red;
o_g <= gre;
o_b <= blu;

end architecture MyHDL;
